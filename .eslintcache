[{"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\index.js":"1","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\App.js":"2","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Player.js":"3","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Song.js":"4","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\util.js":"5","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Library.js":"6","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\LibrarySong.js":"7","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Nav.js":"8"},{"size":197,"mtime":1612785095016,"results":"9","hashOfConfig":"10"},{"size":2316,"mtime":1613740411007,"results":"11","hashOfConfig":"10"},{"size":3208,"mtime":1613243686287,"results":"12","hashOfConfig":"10"},{"size":300,"mtime":1612875830270,"results":"13","hashOfConfig":"10"},{"size":7334,"mtime":1612793180530,"results":"14","hashOfConfig":"10"},{"size":545,"mtime":1613135759069,"results":"15","hashOfConfig":"10"},{"size":1015,"mtime":1613739567992,"results":"16","hashOfConfig":"10"},{"size":410,"mtime":1613135045054,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1rs4i5q",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\index.js",[],["37","38"],"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\App.js",["39"],"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Player.js",["40"],"import { faAngleLeft, faAngleRight, faPause, faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect } from 'react';\r\nconst Player = ({songs, setSongs, setCurrentSong, currentSong, setSongInfo, isPlaying, setIsPlaying, audioRef, songInfo}) => {\r\n  \r\n  useEffect(()=>{\r\n    const newSongs = songs.map(el=> {\r\n      if(el.id === currentSong.id){\r\n        return {...el, active: true}\r\n      }else{\r\n        return {...el, active: false}\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    if(isPlaying){\r\n      const playPromise =audioRef.current.play();\r\n      if(playPromise !== undefined){\r\n        playPromise.then(audo=>{\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  }, [currentSong])\r\n  const getTime = (time) => {\r\n    return( \r\n      Math.floor(time / 60) + \":\" +(\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n\r\n  const dragHandler = (e) => {\r\n      audioRef.current.currentTime = e.target.value;\r\n      const duration = e.target.duration;\r\n      const roundedCurrent = Math.round(e.target.value);\r\n      const roundedDuration = Math.round(duration);\r\n      const animationPercentAge = Math.round(roundedCurrent / roundedDuration * 100);\r\n      setSongInfo({...songInfo, currentTime: e.target.value, animationPercentAge });\r\n  }\r\n  const playSongHandler = () => {\r\n    if(isPlaying){\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n    }else{\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }\r\n  }\r\n\r\n  const skipTrackHandler = async (direction)=>{\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if(direction === 'skip-forward'){\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }else{\r\n      if((currentIndex-1) % songs.length === -1 ){\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n      }else{\r\n        await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      }\r\n    }\r\n    if(isPlaying) audioRef.current.play();\r\n  }\r\n\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPercentAge || 0}%)`\r\n  }\r\n  return (\r\n      <div className=\"player\">\r\n        <div className=\"time-control\">\r\n          <p>{getTime(songInfo.currentTime)}</p>\r\n          <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n            <input min={0} max={songInfo.duration || 0} value={songInfo.currentTime} onChange={dragHandler} type=\"range\"/>\r\n            <div style={trackAnimation} className=\"animate-track\"></div>\r\n          </div>\r\n          <p>{getTime(songInfo.duration || 0)}</p>\r\n        </div>\r\n        <div className=\"play-control\">\r\n            <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size='2x' icon={faAngleLeft}/> \r\n            <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size='2x' icon={isPlaying ? faPause :faPlay}/> \r\n            <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size='2x' icon={faAngleRight}/> \r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Player;","C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Song.js",[],"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\util.js",[],"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Library.js",[],"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\LibrarySong.js",[],["41","42"],"C:\\Users\\User\\Desktop\\creative react\\material-player\\src\\components\\Nav.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":39,"column":176,"nodeType":"49","endLine":39,"endColumn":195},{"ruleId":"50","severity":1,"message":"51","line":23,"column":6,"nodeType":"52","endLine":23,"endColumn":19,"suggestions":"53"},{"ruleId":"43","replacedBy":"54"},{"ruleId":"45","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audioRef', 'isPlaying', 'setSongs', and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["58"],["56"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [audioRef, currentSong, isPlaying, setSongs, songs]",{"range":"61","text":"62"},[781,794],"[audioRef, currentSong, isPlaying, setSongs, songs]"]